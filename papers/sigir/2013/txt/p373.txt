Modeling User’s Receptiveness Over Time For

Recommendation

Wei Chen

Wynne Hsu

Mong Li Lee

School of Computing, National University of Singapore, Singapore

fweichen,whsu,leemlg@comp.nus.edu.sg

ABSTRACT
Existing recommender systems model user interests and the
social inﬂuences independently. In reality, user interests may
change over time, and as the interests change, new friends
may be added while old friends grow apart and the new
friendships formed may cause further interests change. This
complex interaction requires the joint modeling of user in-
terest and social relationships over time. In this paper, we
propose a probabilistic generative model, called Receptive-
ness over Time Model (RTM), to capture this interaction.
We design a Gibbs sampling algorithm to learn the receptive-
ness and interest distributions among users over time. The
results of experiments on a real world dataset demonstrate
that RTM-based recommendation outperforms the state-of-
the-art recommendation methods. Case studies also show
that RTM is able to discover the user interest shift and re-
ceptiveness change over time.

Categories and Subject Descriptors
H.3.3 [Information Storage and Retrieval]: Search and
Retrieval-Information Filtering

General Terms
Algorithms, Experimentation, Measurement, Performance

Keywords
Recommendation, Social trust, Personalization, Collabora-
tive Filtering

1.

INTRODUCTION

Recommender systems are fast becoming the tools of choice
for a user to sieve through tons of online materials in or-
der to ﬁnd information that is relevant to him/her. Many
of these recommender systems employ collaborative ﬁlter-
ing (CF) techniques to identify similar users based on their
purchased history or past ratings to generate personalized

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
SIGIR’13, July 28–August 1, 2013, Dublin, Ireland.
Copyright 20XX ACM 978-1-4503-2034-4/13/07 ...$15.00.

recommendation. This works well when the users have long
term interests that do not change from time to time. How-
ever, for users with short term interests, modeling the shift
in users’ interests has been shown to improve recommenda-
tion accuracy. This is achieved by introducing a personal-
ized time factor for each user to capture the shift in users’
interests over time [18, 7, 5, 8]. With the advent of on-
line social networks, social network based CF approaches
to recommendation have emerged [4, 17, 11]. The assump-
tion is that friends tend to inﬂuence their friends to exhibit
similar likes and dislikes. Hence, we can further improve
recommendation accuracy by taking into account the social
relationships.

Let us consider the snapshots of users’ item ratings and
their social relationships at time points T1 and T2 in Fig-
ure 1. Suppose our target user is U2. At time point T1,
both users U1 and U2 have watched and rated the movie
“M ovie2”. Traditional CF methods [15, 16, 13] will group
U1 and U2 as similar users and recommend “M ovie1” to U2
since U1 has watched “M ovie1” previously. Yet, U2’s interest
does not remain static. We observe that at time point T2,
his interest has shifted from movies to kids as he rates a new
item “Kids1”. Recognizing this, CF with temporal dynamics
will recommend ”Kids2” to U2 instead. On the other hand,
looking at the social relationships among users, we realize
that U2 and U3 are friends. Hence, social network based CF
will conclude that U2 is likely to like “Book1” and “Book2”
since his friend U3 have read and rated these books. Each
of the diﬀerent methods arrive at diﬀerent items to recom-
mend. How do we reconcile the diﬀerent recommendations?
To complicate matter, social relationships are not static but
evolve over time as a user can make new friends and old
friends do grow apart. We observe that at time point T1, U2
has only one friend U3, whereas at time point T2, his friends
are fU3; U4g. Now if we want to give a recommendation to
U2 at time point T2, what item should we recommend so
that it is most likely to be accepted by U2?

To answer this question, we must be able to quantify the
degree of inﬂuence on a user’s decision making process from
his/her long term and short term interests, as well as his/her
social trust relationships over time. Note that these two
factors are not independent. We advocate that when two
users’ long term and short term interests are aligned, they
are likely to become friends, and they will tend to be more
receptive towards each other’s preferences. Conversely, if the
users’ interests are not aligned, they will grow apart after
some time and become less receptive towards the preferences
of the other user.

373Figure 1: Example of Users’ Rating History and their Social Trust Network.

In this paper, we propose a model called the Receptive-
ness over Time Model (RTM), to quantify the dynamic in-
teraction between user interest and social trust. This model
utilizes a probabilistic generative approach to leverage on
the information embedded in a users’ social trust network,
and the users’ rating history. The RTM captures (1) the
degree of receptiveness for each user over time (modeling
receptiveness change), (2) the distribution of personal pref-
erence over the latent topics for each user over time (mod-
eling users’ interests change), (3) the distribution of items
for each topic over time. The estimation of the RTM model
parameters is performed using Gibbs sampling MCMC pro-
cedure. To overcome the data sparsity problem, we design a
special Bayesian treatment to the latent variable to ensure
that the evolution of latent parameter is smooth and share
the topic-level rating knowledge across diﬀerent time points.
We carry out experiments on a real world Epinions dataset
to demonstrate the eﬀectiveness of our proposed approach.
We also demonstrate how RTM can be used to explicitly
track and visualize the change in users’ interests and their
receptiveness to other users.

The rest of the paper is organized as follows. Section 2
gives the related work. Section 3 describes our problem for-
mulation and the proposed RTM model. Section 4 presents
the experimental results, and we conclude in Section 5.

2. RELATED WORK

Existing recommender systems for item recommendation
can be roughly divided into two major categories. Content-
based systems [1, 12] make use of explicitly stated proﬁles of
users or products to characterize their nature. On the other
hand, collaborative ﬁltering (CF) based systems [16, 15] do
not exploit such explicit user proﬁles.
Instead, they infer
the user proﬁles through their past activities, such as their
transaction history or product satisfaction expressed in rat-
ings. The earliest studies [16, 15] on collaborative ﬁltering
automatically predict relevant items ratings for a given user
by referencing item rating information from other similar
users. Recently, [13] propose a Bayesian model that applies
LDA to cluster users and items into groups and model rat-
ings using group membership. Bi-LDA further extends this
model to allow users or movies to belong to several groups,
one for each rating.

Temporal modeling has largely been neglected in the col-
laborative ﬁltering community until Koren et.al [7] propose
their time-aware algorithm timeSVD++. This work extends
the standard matrix factorization model by introducing time
dependent user/item biases and user latent factors to cope
with changing user and item characteristics. Xiong et. al
[8] view the temporal domain as a third dimension and use
tensor factorization to factorize the temporal components so
that a user’s rating on an item within a particular time step
depends not only on the user and item factors but also on the
latent factors associated with the time step. To cope with
temporal dynamics in implicit user feedback data, [18] pro-
poses a random walk model where the user-item edges are
weighted such that a user’s more recent preferences would
be more strongly emphasized during the random walk. [14]
combines the latent factor model and Markov chain model
to predict the next items a user may be interested in. While
all these methods are able to model users’ preferences and
their shift of interests over time, they have not taken social
inﬂuences from friends into account.

Independently, a number of researchers have realized that
social trust plays a great role in user acceptance of the rec-
ommendation [6, 3]. The works in [9, 10, 11] propose to use
matrix factorization method to learn the user latent vectors
and item latent vectors and integrate social trust network
into their model through diﬀerent social regularization term.
[4] develop a generative approach with trust propagation
based on [11].
[17] develop a joint personal and social la-
tent factor (PSLF) model which combines the collaborative
ﬁltering and social network modeling approaches for social
recommendation. [19] propose the probabilistic model called
social inﬂuenced selection (SIS), to model the decision mak-
ing of item selection. However, all these works assume that
the social relationships are static and they do not consider
users’ changing interests. To the best of our knowledge, this
is the ﬁrst work that models both the shift in user interests
and change in social relationships for recommendation.

3. PROPOSED METHOD

In this section, we ﬁrst give our problem formulation.
Then we describe the RTM model and show how the model
can be used for various tasks such as rating prediction, track-
ing receptiveness between friends and user interest change.

3743.1 Problem Formulation
In recommender systems, we have a set of users U = f u1,
... ua g and a set of items M = f m1, ... mb g. At time
t, a user u expresses his/her preference for an item m by
giving a rating in the range of 1 to 5 with 1 being the least
preferred and 5 being the most preferred. These ratings are
represented using the matrix R(t) with dimensions jUj(cid:2)jMj.
Each entry in this matrix, r(t)(u; m), corresponds to the
rating provided by user u on item m at time point t.

Besides the rating information, we also represent the social
relationships among the users at time t in the form of a
matrix S(t) with dimensions jUj (cid:2) jUj such that its entry
s(t)(u; v) = 1 if u issues trust statement towards user v at
time point t. Otherwise s(t)(u; v) = 0. Note that S(t) is
asymmetric in general.
We formulate our task as follows: Given a user u 2 U at
time t and an item m 2 M , we want to predict the rating
that u will give to m at time t based on the past rating
history and social relationships, i.e. R(t
) for all
′ 2 [1; t).
t
3.2 Receptiveness over Time Model

) and S(t

′

′

In order to capture the dynamic interactions between long
term and short term interests as well as friendships for rec-
ommendation, our model has two parts. The ﬁrst part mod-
els user receptiveness at a single time point. The second
part incorporates temporal information to allow for model-
ing over time.
3.2.1 Single Time Point Receptiveness Modeling
Receptiveness captures the dynamic interaction between
user interest and social trust. Existing social CF ﬁlter-
ing approaches [11, 10, 4, 17] incorporate social trusts as
auxiliary data to regulate user preferences for recommen-
dation. In other words, if two users are friends, social CF
approaches will assign greater weights to their correspond-
ing preferences. However, we realize that a user’s decision
making process is not so simplistic. A person may be his/her
friend, however, if that friend’s interests are not aligned with
him/her, the receptiveness to that friend’s interest will not
be high and vice versa.

Among the approaches that model user’s interests for rec-
ommendation, Bi-LDA has proven to work well in practice
[13]. It is a generative model with several advantages that
are suitable for our work:

1. It models the distribution of users’ interest within a
probabilistic framework, thus allowing a more inter-
pretable explanation compared to the matrix factor-
ization approach.

2. It allows the inclusion of prior knowledge into the gen-
erative process and a principled framework to select
model structure. This proves to be useful in link-
ing consecutive time points to avoid the data sparsity
problem in the second part of RTM.

However, Bi-LDA does not incorporate social relation-
ships. For this reason, we extend Bi-LDA to incorporate
social relationships and call it Bi-LDAsocial. Table 1 summa-
rizes the symbols used in describing the Bi-LDAsocial model.
In Bi-LDAsocial, each user u follows a preference distribu-
tion (cid:25)f riend
that depicts how likely u’s friend will contribute
to u’s item rating decision. The probability for a friend of u

u

Table 1: Meanings of symbols used

Symbol

u
U
m
M
f

F (u)

K
L
Dir

x

zf riend
u;m

zuser
u;m

zitem
u;m

(cid:25)f riend
u
(cid:25)user
(cid:25)item

u

m

Φzuser

u;m ;zitem
u;m

Meaning
A user
The set of all users
A item
The set of all items
Friend of user
The set of user u’s friends
Number of user topic
Number of item topic
Dirchlet
The observed rating for user u on item m
The receptive friend picked
for rating given by user u on item m
The user topic picked
for rating given by user u on item m
The item topic picked
for rating given by user u on item m
Distribution of user u over users’ friend
Distribution of user u over users’ topics
Distribution of item m over items’ topics
Rating-scale mixing proportion
of user-item topic joint distribution
over values f1...Rg for topic zuser

u;m , zitem
u;m

to inﬂuence the item rating decision is proportional to the
receptiveness of u to this friend. Note that, we assume u is
a special friend of himself/herself (i.e.,u 2 F (u)).

u

and (cid:25)item

In addition, each user u and item m follow the topic distri-
bution parameters (cid:25)user
m respectively. To rate an
item m, a user u ﬁrst draws a user topic zuser
u;m and the item
m draws a item topic zitem
u;m from the corresponding distri-
is the rating-scale mixing proportion
butions. Φzuser
of user-item topic joint distribution over values f1...Rg for
topic zuser

u;m ;zitem
u;m

u;m , zitem
u;m .

During the generative process, ratings are generated as

follows:

1. Choose a K (cid:2) L distribution over ratings Φ (cid:24) Dir((cid:12))
2. Choose a distribution over friends for each user (cid:25)f riend

(cid:24)

u

Dir((cid:11)f riend)

3. Choose a distribution over K users’ topic for each user

u (cid:24) Dir((cid:11)user)
(cid:25)user

4. Choose a distribution over L items’ topic for each item

m (cid:24) Dir((cid:11)item)
(cid:25)item
5. For each rating ru;m:

u

(cid:15) Choose receptive friend
u;m (cid:24) M ultinomial((cid:25)f riend
zf riend
(cid:15) Choose user topic
u;m (cid:24) M ultinomial((cid:25)user
zuser
(cid:15) Choose item topic
u;m (cid:24) M ultinomial((cid:25)item
zitem
m )
(cid:15) Choose a rating ru;m (cid:24) Φzuser

)

f

)

u;m ;zitem
u;m

The graphical model is shown in Figure 2. We note that
the decision of rating given by user u on item m is based on
the receptiveness of a friend (including u himeself/herself).

375u

). Once the receptive friend zf riend

The receptive friend zf riend
u;m can be drawn from M ultinomial
((cid:25)f riend
is picked, we
randomly draw a topic zuser
u;m ’s preference
based on M ultinomial((cid:25)user
u;m from
item m is also drawn based on M ultinomial((cid:25)item
m ). The
user and item topics zuser
u;m together with user-item
topic joint distribution Φ jointly specify the rating, that is,
ru;m (cid:24) Φzuser

u;m from user zf riend
u

). Similarly, a topic zitem

u;m and zitem

u;m

.

u;m ;zitem
u;m

Figure 2: Graphical model representation of Bi-
LDAsocial

u

u

u

u

m

, (cid:25)item

u;m ;zitem
u;m

u;m , zitem

u;m , Φzuser

In order to compute the rating ru;m, we need to obtain
a number of model parameters, Θ = f (cid:25)f riend
, zf riend
u;m ,
g. Among them,
m , zuser
(cid:25)user
2 R1×|U|
(cid:25)f riend
with Dirchlet priors (cid:11)f riend captures dis-
tribution of the receptiveness of user u to his/her friends,
2 R1×K with Dirchlet priors (cid:11)user depicts the dis-
(cid:25)user
tribution of user u’s preferences on the K users’ topics,
2 R1×L with Dirchlet priors (cid:11)item captures the dis-
(cid:25)item
tribution of an item m on the L items’ topics, Φ 2 RK×L
with Dirchlet priors (cid:12) is rating-scale mixing proportion of
user-item joint topic, zf riend
represents the receptive friend
whom user u has picked for the rating given by user u on
item m, zuser
u;m represents the topic user u has picked and
zitem
u;m represents the topic item m has picked. The hyper-
parameters of the Dirichlet priors (cid:11)f riend; (cid:11)user, (cid:11)item and
(cid:12) can be simply set to 1 [13].

u;m

Let x be the observed rating for user u on item m. Putting
everything together, we obtain the joint probability distri-
bution for the Bi-LDAsocial as follows:

P r(x; zf riend; zuser; zitem; Φ; (cid:25)user; (cid:25)item)
= P r(xjzuser; zitem; Φ) P r(Φj(cid:12)) P r(zuserj(cid:25)user)(cid:2)
P r((cid:25)userj(cid:11)user; zf riend) P r(zf riendj(cid:25)f riend)(cid:2)
P r((cid:25)f riendj(cid:11)r) P r(zitemj(cid:25)item) P r((cid:25)itemj(cid:11)item)
Solving this equation is intractable, instead we adapt the
collapsed Gibbs sampler [2] to learn the model parameters.
In particular, we analytically marginalize out all the conju-

(1)

gate distributions Φ, (cid:25)user, (cid:25)item and (cid:25)f riend and obtain an
expression for the joint probability P (x; zuser; zitem; zf riend).
With this, we can compute the conditional distributions nec-
essary for Gibbs sampling. We give the explicit forms for the
following conditional distributions where x = ru;m is the ob-
served rating, k = zuser

u;m and l = zitem

u;m :

(
)(
u;m ; x) /
∑

(

P (f = zf riend

u;m jΘnzf riend

(cid:2)

(nuser
f;k )

¬(u;m) + (cid:11)user

)

¬(u;m) + (cid:11)f riend
)

)

(nf riend
u;f
¬(u;m)
k;l;x + (cid:12)

N

¬(u;m)
k;l;r + (cid:12))

r (N

(2)

)

u;f

u;f

where nf riend
denotes the number of times that user u is
¬(u;m) denotes
receptive to f in all the ratings , (nf riend
the number of times that user u is receptive to f in all the
¬(u;m) denotes the number of
ratings excluding ru;m, (nuser
f;k )
times user f will be assigned to user topic k in all the ratings
except for ru;m, Nk;l;r represents the number of times the
user with user topic k has rated item with item topic l with
the rating r, and N
represents the number of times
the observed rating x has been given by user with user topic
k on item with item topic l excluding ru;m.

¬(u;m)
k;l;x

Similarly, we deﬁne the conditional distribution for user

topic zuser
u;m :
(
u;m = kjΘnzuser

P (zuser
/

(nuser
f;k )

u;m ; x)

¬(u;m) + (cid:11)user

) (

∑

¬(u;m)
k;l;x + (cid:12)

N

¬(u;m)
k;l;r + (cid:12))

r (N

)

(3)

The conditional distribution is the same for the item topic

with the role of user and item reversed.

(
u;m = ljΘnzitem

u;m ; x)

(nitem
m;l )

¬(u;m) + (cid:11)item

P (zitem
/

) (

∑

N

¬(u;m)
k;l;x + (cid:12)
r N

¬(u;m)
k;l;r + (cid:12)

)

(4)

¬(u;m) denotes the number of times that an
where (nitem
m;l )
item m is assigned to item topic l in all the ratings except
for ru;m, and Nk;l;r represents the number of times that a
user with user topic k has rated an item with item topic l
with the rating r.

The parameter (cid:25)f riend, (cid:25)user, Φ and (cid:25)item can be ob-

tained as follows:

(cid:25)f riend
u;f

nf riend

u;f

+ (cid:11)f riend

=

∑
∑
∑
∑

u;f

f∈F (u) (nf riend
Nk;l;x + (cid:12)
r (Nk;l;r + (cid:12))
u;k + (cid:11)user
nuser
k (nuser
nitem
m;l + (cid:11)item
l (nitem

m;l + (cid:11)item)

u;k + (cid:11)user)

Φk;l;x =

(cid:25)user
u;k =

(cid:25)item
m;l =

+ (cid:11)f riend)

(5)

The algorithm of the collapsed Gibbs sampler for infer-
ring these latent variables fzf riend; zuser; zitemg is shown in
Algorithm 1.

376Algorithm 1: Gibbs sampling for Bi-LDAsocial
input : Users’ rating histories X, users’ trust relation

S, K and L

output: (cid:25)user, Φ, (cid:25)item and (cid:25)f riend
/*Initialization of the latent variables and counters*/
Random initialize zf riend, zuser and zitem
Initialize nf riend, nuser, nitem and N as 0
foreach x = ru;m 2 X do
u;m ,k = zuser

f = zf riend
Increase the counter of nf riend
Nk;l;x

u;m and l = zitem
u;m
, nuser

u;k , nitem

m;l and

u;f

for index=1 to Iter do

u;m ; x) according

u;m jΘnzf riend

u;m jΘnzuser

u;m (cid:24) P (zuser

/* for each rating x = ru;m in X */
foreach x = ru;m 2 X do
/* Sample Friends */
u;m (cid:24) P (zf riend
f = zf riend
to Equation (2)
/* Sample Users’ Topics */
k = zuser
Equation (3)
/* Sample Items’ Topics */
l = zitem
Equation (4)
f = zf riend
u;m , k = zuser
/* Update Counter */
Update the counter nf riend
Nk;l;x

u;m (cid:24) P (zitem

u;m jΘnzitem

u;m , l = zitem

u;f

u;m ; x) according to

u;m ; x) according to

u;m , x = ru;m

, nuser

u;k , nitem

m;l and

/* Get the mean estimate for (cid:25)f riend, (cid:25)user, Φ and
(cid:25)item */
(cid:25)f riend, (cid:25)user, Φ and (cid:25)item can be calculated according
to Eq. (5).

1

2

3
4

5

6

7
8
9
10

11

12
13

14

15

16
17

18

19

20

3.2.2 Receptiveness over Time
The second part of RTM is to model the dynamic inter-
action of users’ interest along with the receptiveness among
friends over time. Given the users’ rating histories at T dif-
ferent time points, a naive approach is to ﬁt a Bi-LDAsocial
model at each time point and learn the receptiveness and
user interest distribution at the various time points, de-
noted as f (cid:25)f riend (1);(cid:1)(cid:1)(cid:1) ; (cid:25)f riend (T )g and f (cid:25)user (1); (cid:1)(cid:1)(cid:1) ,
(cid:25)user (T )g, respectively. However, using this approach, the
latent topics learnt at time point t1 may be totally diﬀerent
from that at time point t2. Furthermore, since we regard
each user in the diﬀerent time point as independent, we are
unable to make use of his/her ratings in the past. This
worsens the data sparsity problem.

To overcome the shortcomings, we assume that the over-
all interest distribution of the whole user population should
remain stable. This enable us to share the Φ across the
diﬀerent time points.
In addition, we impose constraints
on (cid:25)user and (cid:25)f riend by assuming dependency between two
consecutive snapshots as follows:

(cid:25)f riend (t) (cid:24) P ((cid:25)f riend (t)j(cid:25)f riend (t−1))

In other words, we introduce a prior from (cid:25)f riend (t−1)
to (cid:25)f riend (t) so that at time t, we are drawing from the
Dirichlet prior parameterized by (cid:25)f riend (t−1) where

The intuition of (cid:21)(cid:25)f riend (t−1) can be interpreted as the
prior observed counts that user is receptive to his/her friends
before any friend from the current time points is observed.
Similarly, we introduce the parameterized prior for both user
and item topic distributions:

(cid:25)user (t) (cid:24) Dirchlet((cid:21)(cid:25)user (t−1));
(cid:25)item (t) (cid:24) Dirchlet((cid:21)(cid:25)item (t−1))

The graphical representation of the RTM model is shown
in Figure 3. With this change, the conditional distribution
of Equation (2) is now

(

(cid:2)

P (f = zf riend

u;m

j(cid:2)nzf riend

u;m ; x) /

(nuser
f;k;t)

¬(u;m;t) + (cid:21)(cid:25)user (t−1)

¬(u;m;t) + (cid:21)(cid:25)f riend (t−1)
)
¬(u;m;t)
k;l;x

)

+ (cid:12)

(nf riend

u;f;t

∑

N

¬(u;m;t)
k;l;r

r (N

+ (cid:12))

(6)

(
)(

)

u;f;t

(nuser
f;k;t)

¬(u;m;t) denotes the number of times that
where (nf riend
)
user u is receptive to f in all the ratings at time t excluding
¬(u;m;t) denotes the number of times user f
r(t)
u;m.
will be assigned to user topic k in all the ratings at time t
except for r(t)
u;m. Nk;l;r represents the number of times the
user with user topic k has rated item with item topic l with
the rating r, N
represents the number of times the
observed rating x has been given by user with user topic k
on item with item topic l excluding r(t)
u;m Similar change can
be applied to the Equation (3) and (4) by introducing an
additional temporal dimension for the counter, that is:

¬(u;m;t)
k;l;x

P (zuser

(
u;m = kj(cid:2)nzuser

u;m ; x)

/

(nuser
f;k;t)

¬(u;m;t) + (cid:21)(cid:25)user (t−1)

u;k

) (

∑

P (zitem

(
u;m = lj(cid:2)nzitem

u;m ; x)

/

(nitem

m;l;t)

¬(u;m;t) + (cid:21)(cid:25)item (t−1)

u;k

) (

∑

)

)

¬(u;m;t)
k;l;x

N

¬(u;m;t)
k;l;r

r (N

+ (cid:12)

+ (cid:12))

(7)

¬(u;m;t)
k;l;x

N

¬(u;m;t)
k;l;r

r N

+ (cid:12)

+ (cid:12)

(8)

With this, based on the Eq. (5), the parameter (cid:25)f riend,

(cid:25)user, Φ and (cid:25)item can be constructed as:

u;f;t + (cid:21)(cid:25)f riend (t−1)
nf riend

u;f

u;f;t + (cid:21)(cid:25)f riend (t−1)

u;f

(cid:25)f riend (t)
u;f

(cid:25)user (t)
u;k

=

(cid:25)item (t)
m;l;t

(cid:8)k;l;x =

=

∑

=

u;k

∑
f∈F (u) (nf riend
∑
u;k;t + (cid:21)(cid:25)user (t−1)
nuser
u;k;t + (cid:21)(cid:25)user (t−1)
k (nuser
∑
m;l;t + (cid:21)(cid:25)item (t−1)
nitem
m;l;t + (cid:21)(cid:25)item (t−1)
l (nitem
Nk;l;x + (cid:12)
r (Nk;l;r + (cid:12))

m;l

m;l

u;k

)

)

)

(9)

The process of generating time series ratings is summa-

rized as follows:

(cid:25)f riend(t) (cid:24) Dirchlet((cid:21)(cid:25)f riend (t−1))

1. Choose a K (cid:2) L distribution over ratings Φ (cid:24) Dir((cid:12))

377Figure 3: Graphical model representation of RTM Model

2. For time t = 1, choose a distribution over friends F (u)

for each user (cid:25)f riend (1)
For time t > 1, choose a distribution over friends F (u)
for each user (cid:25)f riend (t)

(cid:24) Dir((cid:11)f riend);
(cid:24) Dir((cid:21)(cid:25)f riend (t−1))

u

u

3. For time t = 1, choose a distribution over K users’

topic for each user (cid:25)user (1)
For time t > 1, choose a distribution over K users’
topic for each user (cid:25)user (t)

(cid:24) Dir((cid:11)user).
(cid:24) Dir((cid:21)(cid:25)user (t−1)).

u

u

4. For time t = 1, choose a distribution over L items’

topic for each item (cid:25)item (1)
For time t > 1, choose a distribution over L items’
topic for each item (cid:25)item (t)

(cid:24) Dir((cid:11)item).
(cid:24) Dir((cid:21)(cid:25)item (t−1)).

m

m

f = zf riend

5. For each rating x = r(t)
u;m:
(cid:15) Choose user friend
(cid:15) Choose user topic
(cid:15) Choose item topic

u;m (cid:24) M ultinomial((cid:25)f riend (t)
u;m (cid:24) M ultinomial((cid:25)user (t)
u;m (cid:24) M ultinomial((cid:25)item (t)

k = zuser

l = zitem

m

)

)

u

f

(cid:15) Choose a rating r(t)

u;m (cid:24) Φk;l

)

Based on the generative process, we can design Gibbs sam-
pling to infer the latent variables as shown in Algorithm 2.
Note that that the cost of running a full Gibs iteration is
O(p) where p is the total number of rating observations.
3.3 Applications of RTM

In this section, we discuss how the RTM model can be
used for rating prediction, tracking receptiveness over time,
and analyzing users interest change.

(cid:15) RTM-based Rating Prediction

Having obtained the RTM model, we predict the rating
made by user u on item m at time point t as follows:

(cid:25)f riend (t)
u;f

[(cid:25)user (t)

u

]

⊤

Φ(cid:25)item (t)

m

∑

ˆr(t)
u;m =

f∈F (u)

1

2

3

4

5

6

7
8

9
10

11

12
13

14

15

16

17

18

19

Algorithm 2: Gibbs sampling for RTM
input : Users’ rating histories over time

R=fR(1),...R(T )g,
users’ trust relation over time
S=fS(1),...,S(T )g,
K, L and (cid:21)

output: (cid:25)user (t), Φ, (cid:25)item (t) and (cid:25)f riend (t)
/*Initialization of the latent variables and counters*/
Random initialize zf riend, zuser and zitem
Initialize nf riend, nuser and nitem and N as 0
foreach x = r(t)

u;m 2 X do
u;m ,k = zuser

f = zf riend
Increase the counter of nf riend
Nk;l;x

u;m and l = zitem
u;m
, nuser

u;f;t

u;k;t, nitem

m;l;t and

u;m jΘnzf riend

u;m ; x) according

/* for each rating x = r(t)
for index=1 to Iter do

u;m in X */

foreach x = r(t)

u;m jΘnzuser

u;m (cid:24) P (zuser

u;m 2 X do
/* Sample Friends */
u;m (cid:24) p(zf riend
f = zf riend
to Equation (6)
/* Sample Users’ Topics */
k = zuser
Equation (7)
/* Sample Items’ Topics */
l = zitem
Equation (8)
/* Update Counter */
Update the counter nf riend
Nk;l;x

u;m (cid:24) P (zitem

u;m jΘnzitem

u;f;t

u;m ; x) according to

u;m ; x) according to

, nuser

u;k;t, nitem

m;l;t and

/* Get the mean estimate for (cid:25)f riend (t), (cid:25)user (t), Φ
and (cid:25)item (t)*/
(cid:25)f riend (t), (cid:25)user (t), Φ and (cid:25)item (t) can be calculated
according to Eq. (9).

378Table 2: Summary of methods.

Data used

Static rating

Rating over time

N o social trust Static social trust Social trust over time
RTM-StaticInterest
Bi-LDA, PMF
TimeSVD++
RTM

SocialMF
RTM-StaticSocial

(cid:15) Receptiveness Change Analysis

For a given user u, the receptiveness of u to his/her
friends (including user u) at time point t is (cid:25)f riend (t)
.
By constructing the receptiveness of other users to user
u in T time points, we can track the receptiveness of
other users on user u over time:

u

[

C f riend

u

=

(cid:25)f riend (1)
u

; :::; (cid:25)f riend (t)

u

u

is an jUj (cid:2) T matrix. Each column in
where C f riend
u
C f riend
can be interpreted as the expected probability
where user u may be receptive to the other jUj users at
time point t. In other words, we can discover who are
the users that u is most receptive to at the particular
time point.

(cid:15) User Interest Change Analysis

For a given user u, we compute the user u’s preference
over item topic at time point t as [(cid:25)user (t)
Φ. By
constructing u’s preference over item topic for all T
time points, we can track u’ s interest change over
time:

⊤

u

[

Cu =

[(cid:25)user (1)

u

]

⊤

Φ; :::; [(cid:25)user (t)

u

]

⊤

Φ

where Cu is a L(cid:2)T matrix. Each column in Cu can be
interpreted as the expected ratings provided by user u
on all the L item topic at time point t. By sorting
the columns, we can discover what kind of items are
preferred by a user at a certain time point.

4. EXPERIMENTAL RESULTS

In this section, we evaluate the eﬀectiveness of the pro-
posed RTM model that utilizes both time-stamped rating
data and trust over time for recommendation. We also im-
plement two variants of RTM:

(cid:15) RTM-StaticSocial: this variant assumes that the so-
cial trust does not change over time while user interest
may shift over time as reﬂected by the time-stamped
rating data. This is achieved by using the same social
trust information for all the time points.

(cid:15) RTM-StaticInterest: this variant assumes that the
user interest does not change over time and only the
social trust changes over time. This is achieved by us-
ing the same rating information for all the time points.

We compare the proposed models with the following state-

of-the-art recommender methods for rating prediction:

]

]

]

1. Probabilistic Matrix Factorization (PMF) [15].
This is a matrix factorization based CF algorithm that
utilizes static user ratings on items. No social trust
information is used.

2. Bi-LDA [13] This is a generative model that also uti-
lizes static ratings for prediction. Again no social trust
information is employed.

3. TimeSVD++[7] This is temporal CF algorithm that
assumes user interests change over time and is the
baseline of temporal CF methods. This method does
not incorporate social trust information.

4. SocialMF [4]. This is a social CF algorithm that uti-
lizes the social trust information and is the baseline
of social CF methods. This method does not consider
the shift in user interest.

Table 2 gives a summary of the various methods. All the
experiments are carried out on an Intel Core i7-2600 CPU
with 8GB RAM, running Windows 7-64 bit.

4.1 Experimental Dataset

We use the Epinions dataset1 in our experiments. This
dataset comprises of two ﬁles. The ﬁrst ﬁle contains 717; 667
user trust statements with time-stamps, while the second
ﬁle contains 13; 668; 319 users’ ratings provided by 120; 492
users on 755; 760 articles on a scale of 1 to 6, with 1 being not
helpful and 6 being most helpful. Each rating is associated
with a time-stamp over the period from February 2001 to
July 2002.

We sort the data according to the time-stamps and split
the data into 6 equal time slices. Each time slice corre-
sponds to about 3 months. We use the ﬁrst 5 time slices of
data as the training data, and the last time slice for testing.
We also ﬁlter out users that have made less than 10 unique
ratings. After pre-processing, we obtain 5; 077; 392 users’
ratings with 9; 149 users and 116; 697 articles and 236; 878
social relations. Table 3 summarizes the statistics of the
rating dataset.

Table 3: Statistics of rating dataset.

Statistics
Min. # of ratings
Max. # of ratings
Mean. # of ratings

Users

Movies

10
39,467
554:96 (cid:6) 1681:11

1
1134
43:50 (cid:6) 41:04

1http : ==www:trustlet:org=wiki=ExtendedEpinionsdataset

379(a) MAE

(b) RMSE

Figure 4: Accuracy of Rating Prediction

Figure 5: User interest change over time

4.2 Rating Prediction Analysis

In this set of experiments, we compare the performance
of the various methods. We use the standard evaluation
metrics Mean Absolute Error (MAE) and Root Mean Square
Error (RMSE) deﬁned as follows:

M AE =

∑
√∑

ri∈D

jri (cid:0) ˆrij
jDj
ri∈D(ri (cid:0) ˆri)2

RM SE =

jDj

where D denotes the test dataset, ri is the actual rating
and ˆri is the predicted rating. A smaller value of MAE or
RMSE indicates a better performance.

Figure 4 shows the results when we vary the number of
user/item dimensions from 10 to 50. We observe that the
proposed RTM model has the lowest MAE and RMSE, demon-
strating that capturing the dynamic interest between user
interest and social trust can improve the rating prediction
accuracy. In particular, RTM model lowers the RMSE (MAE)

by as much as 7.71% (8.26%) compared to the SocialMF
model, and 8.14% (9.29%), compared to TimeSVD++.

Both SocialMF and RTM-StaticInterest outperform con-
ventional CF models that do not incorporate trust infor-
mation, namely, Bi-LDA and PMF. This indicates that so-
cial trust can help improve the rating prediction accuracy.
Both TimeSVD++ and RTM-StaticSocial model user inter-
est over time and thus perform better than Bi-LDA and
PMF.

4.3 User Interest Change Case Study

Here, we visualize the user interest proﬁle obtained from
the RTM model over time. Figure 5 shows the interest pro-
ﬁles of 2 users from the Epinions dataset. We observe that
the user 739’s interests remains stable over the time, as in-
dicated by his/her high preference for user latent topic 1
throughout the 6 time points. User 365’s main interest is
in the latent topic 4 from time points 1 to 3, and changes
to latent topics 9 from time point 4 to 6, showing a shift in
his/her interest.

On closer examination, we ﬁnd that user 739 has rated a
lot of reviews in the topic with id 72 for all the time points.

 0.24 0.26 0.28 0.3 0.32 0.34 0.36 0.381020304050MAELatent Factor Number KPMFBi-LDATimeSvd++SocialMFRTM-StaticSocialRTM-StaticInterestRTM 0.54 0.56 0.58 0.6 0.62 0.64 0.66 0.68 0.71020304050RMSELatent Factor Number KPMFBi-LDATimeSvd++SocialMFRTM-StaticSocialRTM-StaticInterestRTM380Figure 6: User interest proﬁles and their trust relationships

On the other hand, user 365 mainly rated reviews on the
topic with id 549 from time points 1 to 3, and then change
to rate reviews on the topic with id 447 from time points 4
to 6. This conﬁrms that the interest proﬁles obtained from
the RTM model can capture user interest change.
4.4 User Receptiveness Case Study

Next, we analyze the user interest proﬁles and their social
trust relationships over time. Figure 6 shows the interest
proﬁles of 4 users and their social trust relationships at time
points T1 and T6. Suppose user 433 is our target user. We
note that at time point T1, user 433 does not know user
34 and their interest proﬁles are quite diﬀerent. However
at time point T6, user 34 has become user 344’s friend and
his/her interest proﬁle has shifted to become similar to that
of user 344. Looking at Figure 7 which shows the recep-
tiveness of user 433 towards the other 3 users over time,
we observe that the receptiveness of user 433 to user 34 in-
creases sharply at T6. This indicates that the RTM model
captures the dynamic interaction between user interests and
social relationships faithfully.

4.5 Sensitivity Experiments

In this section, we examine the eﬀect of various parameters

on the performance of the RTM model.
4.5.1 Effect of varying K and L
Table 4 shows the RMSE of RTM as we vary the number
of user topic K and the number of item topic L from 10 to
50. We observe that RMSE does not vary much. The best
performance is achieved by setting K = 40 and L = 50.

Figure 7: Receptiveness change over time

Table 4: Eﬀect of K and L on RMSE

HHHHHK

L

10

20

30

40

50

10
20
30
40
50

0.5572
0.5532
0.5718
0.5534
0.5521

0.5512
0.5473
0.5518
0.5417
0.5447

0.543
0.5447
0.5428
0.5412
0.5401

0.5419
0.5428
0.5434
0.5431
0.5414

0.5420
0.5443
0.5417
0.5367
0.5439

 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5T1T2T3T4T5T6Receptiveness for target userTime PointUser 109User 562User 34381joint conference on Arti(cid:12)cial Intelligence, IJCAI,
pages 2644–2649, 2011.

[5] N. Koenigstein, G. Dror, and Y. Koren. Yahoo! music

recommendations: modeling music ratings with
temporal dynamics and item taxonomy. In Proceedings
of the (cid:12)fth ACM conference on Recommender systems,
RecSys, pages 165–172, 2011.

[6] I. Konstas, V. Stathopoulos, and J. M. Jose. On social

networks and collaborative recommendation. SIGIR,
pages 195–202, 2009.

[7] Y. Koren. Collaborative ﬁltering with temporal

dynamics. In Proceedings of the 15th ACM SIGKDD
international conference on Knowledge discovery and
data mining, KDD, pages 447–456, 2009.

[8] T.-K. H. J. S. J. G. C. Liang Xiong, Xi Chen.
Temporal collaborative ﬁltering with bayesian
probabilistic tensor factorization. In Proceedings of
SIAM Data Mining, 2010.

[9] H. Ma, I. King, and M. R. Lyu. Learning to

recommend with social trust ensemble. SIGIR, pages
203–210, 2009.

[10] H. Ma, M. R. Lyu, and I. King. Learning to

recommend with trust and distrust relationships. In
Proceedings of the third ACM conference on
Recommender systems, RecSys, pages 189–196, 2009.

[11] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King.

Recommender systems with social regularization. In
Proceedings of the fourth ACM international
conference on Web search and data mining, WSDM,
pages 287–296, 2011.

[12] R. J. Mooney and L. Roy. Content-based book

recommending using learning for text categorization.
In Proceedings Of 5th ACM Conference On Digtal
Libraries, pages 195–204, 1999.

[13] I. Porteous, E. Bart, and M. Welling. Multi-hdp: A

non parametric bayesian model for tensor
factorization. In Proceedings of the 23rd national
conference on Arti(cid:12)cial intelligence, AAAI, pages
1487–1490, 2008.

[14] S. Rendle, C. Freudenthaler, and L. Schmidt-Thieme.

Factorizing personalized markov chains for next-basket
recommendation. WWW, pages 811–820, 2010.

[15] R. Salakhutdinov and A. Mnih. Probabilistic matrix

factorization. Advances in Neural Information
Processing Systems, pages 1257–1264, 2008.

[16] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl.

Item-based collaborative ﬁltering recommendation
algorithms. WWW, pages 285–295, 2001.

[17] Y. Shen and R. Jin. Learning personal + social latent

factor model for social recommendation. In
Proceedings of the 18th ACM SIGKDD international
conference on Knowledge discovery and data mining,
KDD, pages 1303–1311, 2012.

[18] L. Xiang, Q. Yuan, S. Zhao, L. Chen, X. Zhang,

Q. Yang, and J. Sun. Temporal recommendation on
graphs via long- and short-term preference fusion. In
Proceedings of the 16th ACM SIGKDD international
conference on Knowledge discovery and data mining,
KDD, pages 723–732, 2010.

Figure 8: Eﬀect of (cid:21) on RMSE

4.5.2 Effect of varying (cid:21)
Recall that the parameter (cid:21) control how much the prior
information is transferred from the previous time slice to
the current time slice. When (cid:21) = 0, no prior information is
used.

Figure 8 shows the RMSE obtained for varying (cid:21) values.
We observe that the best performance is obtained when (cid:21) =
1, indicating that prior information helps to improve item
rating prediction.

5. CONCLUSIONS

In this paper, we have motivated the need to capture the
dynamic interaction between trust and user interest for rec-
ommendation. We have designed the RTM generative model
that incorporates user interest and social trust relationships
over time. We have also devised eﬃcient algorithms to learn
the latent variables in the RTM model using Gibbs sam-
pling. Experimental results have shown that RTM-based
recommendation outperforms state-of-the-art CF methods.
In addition, the model provides easy interpretations to allow
easy visualization of users’ receptiveness and interest change
over time.

6. REFERENCES
[1] M. Balabanovi´c and Y. Shoham. Fab: content-based,

collaborative recommendation. Communications of the
ACM, pages 66–72, March 1997.

[2] G. Casella and E. I. George. Explaining the Gibbs

sampler. The American Statistician, 46:167–174, 1992.
[3] M. Jamali and M. Ester. Trustwalker: a random walk

model for combining trust-based and item-based
recommendation. In Proceedings of the 15th ACM
SIGKDD international conference on Knowledge
discovery and data mining, KDD, pages 397–406, 2009.

[4] M. Jamali and M. Ester. A transitivity aware matrix

[19] M. Ye, X. Liu, and W.-C. Lee. Exploring social

factorization model for recommendation in social
networks. In Proceedings of the 22nd international

inﬂuence for recommendation: a generative model
approach. SIGIR, pages 671–680, 2012.

 0.52 0.54 0.56 0.58 0.6 0.62 0.640.11101001000RMSEλRTM (K=10,L=10)RTM (K=30,L=30)RTM (K=50,L=50)382